/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.finalproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author darlyn
 */
public class DeletePaciente extends javax.swing.JFrame {

    ConexionDB con = new ConexionDB();
    Connection conexion = con.conectar();
    public DeletePaciente() {
        initComponents();
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        txtCedula = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ELIMINAR PACIENTE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Fira Sans", 1, 36), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 600, 240));

        txtCedula.setBackground(new java.awt.Color(255, 255, 255));
        txtCedula.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 140, 40));

        btnDelete.setBackground(new java.awt.Color(0, 102, 102));
        btnDelete.setText("ELIMINAR PACIENTE");
        btnDelete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 190, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        int fila = this.dataTable.getSelectedRow();
        this.txtCedula.setText(this.dataTable.getValueAt(fila, 0).toString());
    }//GEN-LAST:event_dataTableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Estas seguro que deseas eliminar cliente", "salir", JOptionPane.YES_NO_OPTION) == 0){
            try {
                PreparedStatement ps = conexion.prepareStatement("DELETE FROM pacientes where cedula = '"+txtCedula.getText()+"'");
                int indice = ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "se ha eliminado el paciente correctamente");
                limpiar();
                if(indice >0){
                    mostrarDatos();
                } else {
                    System.out.println("no ha seleccionado fila");
                }
            }catch(SQLException ex){
                System.out.println("Error al eliminar datos " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


        private void mostrarDatos(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("CEDULA"); //a?adimos las propiedades de la tabla
        modelo.addColumn("NOMBRE");
        modelo.addColumn("APELLIDO");
        modelo.addColumn("ESTADO");
        dataTable.setModel(modelo); // la segteamos en la tabla
        String consultasSQL = "SELECT * FROM pacientes"; // aqui creamos la consulta que queremos ejecutar
        //segun la funcion
        String data[] = new String[4];
        Statement st;
        
        if(conexion != null){
            try {
                st = conexion.prepareStatement(consultasSQL);
                ResultSet resultado = st.executeQuery(consultasSQL);
                while(resultado.next()){

                    data[0] = resultado.getString("cedula");
                    data[1] = resultado.getString("nombre");
                    data[2] = resultado.getString("apellido");
                    data[3] = resultado.getString("estado");
                    modelo.addRow(data);
                }
            } catch(SQLException ex){
                System.out.println("Error al mostar los datos " + ex.getMessage());
            }
        }
    }
        
    private void limpiar(){
        txtCedula.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JTable dataTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCedula;
    // End of variables declaration//GEN-END:variables
}
